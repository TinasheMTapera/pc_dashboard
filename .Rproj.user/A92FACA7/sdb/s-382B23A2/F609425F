{
    "collab_server" : "",
    "contents" : "#plot scripts\n\n#requirements\nrequire(tidyverse) #tidy programming\nrequire(lubridate) #easy working with datetimes\nrequire(scales) #formatting of axes\nrequire(viridis) #colour scheme\nrequire(plotly) #interactivity\n\n#convert to camel case\ncamel2 <- function(x) {\n  gsub(\"(^|[^[:alnum:]])([[:alnum:]])\", \"\\\\U\\\\2\", x, perl = TRUE)\n}\n\n#custom ggplot theme\ntheme_PC <- function () {\n  theme(\ttext = element_text(size=18,family=\"Arial\", colour = \"#222E3E\"), \n         panel.background = element_rect(fill = \"white\",\n                                         colour = \"white\", size = 1),\n         panel.grid.major = element_line(size = 0.3,\n                                         linetype = 'solid',\n                                         colour = \"grey\"),\n         panel.grid.minor = element_line(size = 0.15, \n                                         linetype = 'solid',\n                                         colour = \"grey\"),\n         legend.position = \"bottom\",\n         axis.text.x = element_text(size = 14)\n         #plot.title = element_text(hjust = 0.5)\n  )\n\n}\n\n#activity view plots\n#output$traffic = renderPrint(\"call traffic\")\nTrafficPlot = function(df){\n  \n  df%>%\n    ggplot(aes(x=call_start))+\n    geom_freqpoly(binwidth=60*60*24, colour = \"blue\")+\n    labs(title=\"Call Traffic Over Time\", y = \"Count\", x = \"Date\")+\n    scale_color_viridis(option = \"viridis\", discrete = TRUE)+\n    theme_PC()\n  \n  # ggplotly(p)\n}\n\n\n#output$PerQuarter = renderPrint(\"call freq per quarter\")\nQuarterPlot = function(df){\n  \n  df$Month = month(df$call_start, label = TRUE)\n  \n  Fall = c(\"Sep\", \"Oct\", \"Nov\", \"Dec\")\n  Winter = c(\"Jan\", \"Feb\", \"Mar\")\n  Spring = c(\"Apr\", \"May\", \"Jun\")\n  Summer = c(\"Jul\", \"Aug\")\n  \n  df = df%>%\n    mutate(Quarter = ifelse(.$Month %in% Fall, \"Fall\",\n                     ifelse(.$Month %in% Winter, \"Winter\",\n                     ifelse(.$Month %in% Spring, \"Spring\", \"Summer\"))))\n  \n  \n  df%>%\n    select(Quarter)%>%\n    ggplot(aes(x=Quarter, fill = Quarter))+\n    geom_bar()+\n    labs(title=\"Call Frequency Per\\nQuarter\", y = \"Count\", x = \"Quarter\")+\n    guides(fill=FALSE)+\n    scale_fill_viridis(discrete = TRUE)+\n    theme_PC()\n  \n}\n\n\n#output$PerDay = renderPrint(\"call freq per day of week\")\nDayPlot = function(df){\n  \n  shifts = hour(df$call_start) < 20\n  df$call_start[shifts] = df$call_start[shifts] - days(1)\n  \n  df$Day = wday(df$call_start, label=TRUE)\n  df%>%\n    select(Day)%>%\n    ggplot(aes(x=Day, fill = Day))+\n    geom_bar()+\n    labs(title=\"Call Frequency Per\\nDay of Week\", y = \"Count\", x = \"Day\")+\n    guides(fill=FALSE)+\n    scale_fill_viridis(discrete = TRUE)+\n    theme_PC()\n  \n}\n\n\n#output$PerHour = renderPrint(\"call freq per hour of day\")\nHourPlot = function(df){\n  \n  df$Hour = hour(df$call_start)\n  \n  df%>%\n    select(Hour)%>%\n    ggplot(aes(x=Hour, fill = Hour))+\n    geom_bar()+\n    labs(title=\"Call Frequency Per\\nHour of Night\", y = \"Count\", x = \"Hour\")+\n    scale_x_continuous(breaks = pretty_breaks())+\n    guides(fill=FALSE)+\n    scale_fill_viridis(discrete = TRUE)+\n    theme_PC()\n  \n}\n\n#counselor view outputs\nCallsPlot = function(df, by=\"both\"){\n  \n  if(by != \"both\"){\n    df%>%\n      select(by)%>%\n      gather(key = \"Role\", value = \"Counselor\", factor_key = TRUE)%>%\n      group_by(Counselor,Role)%>%\n      count()%>%\n      ggplot(aes(x=reorder(Counselor, n), y=n, fill = by))+\n      geom_col()+\n      scale_fill_discrete(labels = paste0(\"As \", camel2(by)))+\n      labs(title = \"Number of Calls Per Counselor\",\n           y = \"Count\",\n           x = \"Counselor\",\n           fill = \"Role\")+\n      coord_flip()+\n      scale_fill_viridis(discrete = TRUE)+\n      theme_PC()\n  }else{\n    df%>%\n      select(one_of(c(\"primary\",\"secondary\")))%>%\n      gather(key = \"Role\", value = \"Counselor\", factor_key = TRUE)%>%\n      group_by(Counselor,Role)%>%\n      count()%>%\n      ggplot(aes(x=reorder(Counselor, n), y=n, fill = Role))+\n      geom_col()+\n      scale_fill_discrete(labels = c(\"As Primary\", \"As Secondary\"))+\n      labs(title = \"Number of Calls Per Counselor\",\n           y = \"Count\",\n           x = \"Counselor\")+\n      coord_flip()+\n      scale_fill_viridis(discrete = TRUE)+\n      theme_PC()\n  }\n}\n\n\n#output$Skills = renderPrint(\"Number of skills used\")\nSkillsPlot = function(df){\n  \n  df%>%\n    select(starts_with(\"skills\"))%>%\n    gather(key = \"Skill\", value = \"value\", factor_key = TRUE)%>%\n    mutate(Skill = gsub(\"skills\\\\.\", \"\", .$Skill))%>%\n    filter(value != 0)%>%\n    group_by(Skill)%>%\n    count(value)%>%\n    ggplot(aes(x=reorder(Skill, n), y=n, fill = Skill))+\n    geom_col()+\n    guides(fill=FALSE)+\n    labs(title=\"Skills Used By Counselors\",\n         y = \"Count\",\n         x = \"Skill\")+\n    coord_flip()+\n    scale_fill_viridis(discrete = TRUE)+\n    theme_PC()\n}\n\n#topics view outputs\n#output$Topics = renderPrint(\"Topics heatmap\")\nTopicsPlot = function(lda){\n  \n  lda$term = factor(lda$term,\n                    levels(lda$term)[order(levels(lda$term), decreasing = TRUE)])\n  \n  lda%>%\n    ggplot(aes(topic, term))+\n    geom_tile(aes(fill = beta), colour=\"white\")+\n    labs(fill = \"Word Influence\",\n         title = \"Call Body Topics Vs. Word\\nInfluence on Topics\",\n         x = \"Topic\",\n         y = \"Words\")+\n    scale_fill_viridis(discrete = FALSE)+\n    guides(fill = guide_colorbar(title.position = \"top\", barwidth = 15))+\n    theme_PC()\n  \n}\n\n#output$SecondaryIssues = renderPrint(\"Secondary Issues\")\nIssuePlot = function(df){\n  \n  df%>%\n    select(contains(\"issues\"))%>%\n    gather(key = \"Issue\", value = \"value\", factor_key = TRUE)%>%\n    mutate(Type = ifelse(grepl(\"primary\",.$Issue), \"Primary\", \"Secondary\"))%>%\n    mutate(Issue = gsub(\".*_issues\\\\.\", \"\", .$Issue))%>%\n    filter(value != 0)%>%\n    group_by(Issue, Type)%>%\n    count(value)%>%\n    ggplot(aes(x=reorder(Issue, n), y=n, fill = Type))+\n    geom_col()+\n    labs(title = \"Issues Reported By\\nCounselors\",\n         y = \"Count\",\n         x = \"Issue\")+\n    scale_fill_discrete(labels = c(\"Primary Issue\", \"Secondary Issue\"))+\n    scale_y_continuous(breaks = pretty_breaks())+\n    coord_flip()+\n    scale_fill_viridis(discrete = TRUE)+\n    theme_PC()\n}\n",
    "created" : 1528320185713.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2634746715",
    "id" : "F609425F",
    "lastKnownWriteTime" : 1528326086,
    "last_content_update" : 1528326086614,
    "path" : "~/Google Drive/DataScience/pc_dashboard/Plots.R",
    "project_path" : "Plots.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}